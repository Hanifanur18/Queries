--Objective : Akan membuat temporary tabel dengan nama  yang akan digunakan untuk sebuah Laporan yang bertujuan untuk menyajikan data penjualan 
--            setiap bulan berdasarkan product. Tujuan utama dari laporan ini adalah untuk mengidentifikasi produk dengan penjualan tertinggi setiap bulannya.
--Dataset : https://console.cloud.google.com/marketplace/product/bigquery-public-data/thelook-ecommerce?project=cool-benefit-286000 

--QUERY ONLY--
CREATE OR REPLACE TEMP TABLE report_monthly_orders_product_agg AS
SELECT
  DATE_TRUNC(oi.created_at, month) AS Month,
  p.category AS category ,p.id AS product_id, p.name AS product_name,
  COUNT(oi.order_id) AS num_orders,
  COUNT(DISTINCT oi.id) AS quantity_sold, 
  SUM(oi.sale_price) AS total_sales
FROM`bigquery-public-data.thelook_ecommerce.order_items` oi
LEFT JOIN `bigquery-public-data.thelook_ecommerce.products` p
ON oi.product_id = p.id
WHERE oi.status = 'Complete'
GROUP BY 1,2,3,4;
SELECT * FROM report_monthly_orders_product_agg;

--QUERY WITH EXPLANATION--
CREATE OR REPLACE TEMP TABLE report_monthly_orders_product_agg AS 
--Untuk membuat temporary table dengan nama report_monthly_orders_product_agg, jika sudah ada maka akan di replace.
SELECT 
-- Dengan menggunakan SELECT, kita dapat mendefinisikan apa saja kolom pada temp table, secara berurutan
  --1.Informasi bulan (dari tabel order_items, alias oi) karena report ini akan tentang monthly orders
  DATE_TRUNC(oi.created_at, month) AS Month, 
  --2.Category product (dari tabel products, alias p), karena kita akan fokus mengaggregasi data berdasarkan bulan dan kategori
  p.category AS category ,
  --3.Product ID (dari tabel products, alias p) sebagai informasi tambahan sebuah produk
  p.id AS product_id, 
  --4.Nama produk (dari tabel products, alias p) sebagai informasi nama dari sebuah produk 
  p.name AS product_name,
  --5.Number of orders (dari tabel order_items, alias oi), akan dihitung untuk setiap produk berapa kali diorder
  COUNT(DISTINCT oi.order_id) AS num_orders, 
  --6.Quantity sold (dari tabel order_items, alias oi), akan dihitung berapa banyak produk yang sold. Berbeda dengan num_orders karena bisa jadi dalam sekali order dibeli >1 qty
  COUNT(DISTINCT oi.id) AS quantity_sold,
  --7.Total sales (dari tabel oreder_item, alias oi), ini yang paling penting selain berapa banyak produk yang terjual, harus diketahui juga berapa sales yang masuk dari produk tersebut
  SUM(oi.sale_price) AS total_sales
--Ke tujuh kolom diatas akan di ambil dari 2 tabel yang berbeda yaitu order_items (alias oi) dan products (alias p)
--Untuk table products kita akan lakukan left join karena kita tidak memerlukan informasi produk yang tidak terjual (andaikan ada) karena temporary tabel ini akan fokus ke produk-produk unggulan
FROM`bigquery-public-data.thelook_ecommerce.order_items` oi
LEFT JOIN `bigquery-public-data.thelook_ecommerce.products` p
--left join dilakukan dengan menyambungkan product_id dari tabel products (id) dan order_items(product_id)
ON oi.product_id = p.id
--Tentunya kita hanya akan mempertimbangkan order yang sudah complete (ada yang beberapa kategori lain seperti processing, shipping, returned, refunded)
WHERE oi.status = 'Complete'
--kita akan group semua data berdasarkan kolom 1-4
GROUP BY 1,2,3,4;
--Terakhir kita bisa lihat hasil temporary table yang telah dibuat dengan SELECT *,yaitu memanggil keseluruhan data dari temp tabel.
SELECT * FROM report_monthly_orders_product_agg;
